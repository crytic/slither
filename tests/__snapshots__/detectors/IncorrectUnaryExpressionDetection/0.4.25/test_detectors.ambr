# serializer version: 1
# name: test_detector[IncorrectUnaryExpressionDetection-0.4.25-invalid_unary_expression.sol]
  list([
    list([
      dict({
        'check': 'incorrect-unary',
        'confidence': 'Medium',
        'description': '''
          C.f() (tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#6-14) uses an dangerous unary operator: x = + 144444 (tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#8)
  
        ''',
        'elements': list([
          dict({
            'name': 'f',
            'source_mapping': dict({
              'ending_column': 4,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
              'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
              'is_dependency': False,
              'length': 142,
              'lines': list([
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
              ]),
              'start': 60,
              'starting_column': 3,
            }),
            'type': 'function',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'C',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                  'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                  'is_dependency': False,
                  'length': 204,
                  'lines': list([
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                  ]),
                  'start': 0,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
              'signature': 'f()',
            }),
          }),
          dict({
            'name': 'x = + 144444',
            'source_mapping': dict({
              'ending_column': 31,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
              'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
              'is_dependency': False,
              'length': 26,
              'lines': list([
                8,
              ]),
              'start': 104,
              'starting_column': 5,
            }),
            'type': 'node',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'f',
                'source_mapping': dict({
                  'ending_column': 4,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                  'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                  'is_dependency': False,
                  'length': 142,
                  'lines': list([
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                  ]),
                  'start': 60,
                  'starting_column': 3,
                }),
                'type': 'function',
                'type_specific_fields': dict({
                  'parent': dict({
                    'name': 'C',
                    'source_mapping': dict({
                      'ending_column': 2,
                      'filename_absolute': '/GENERIC_PATH',
                      'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                      'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                      'is_dependency': False,
                      'length': 204,
                      'lines': list([
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                      ]),
                      'start': 0,
                      'starting_column': 1,
                    }),
                    'type': 'contract',
                  }),
                  'signature': 'f()',
                }),
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#L6-L14',
        'id': '1c34192b7e1340c90c351ae8dcdbf0ce55436d33da941fd80ca110fadc120471',
        'impact': 'Low',
        'markdown': '''
          [C.f()](tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#L6-L14) uses an dangerous unary operator: [x = + 144444](tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#L8)
  
        ''',
      }),
      dict({
        'check': 'incorrect-unary',
        'confidence': 'Medium',
        'description': '''
          C.f() (tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#6-14) uses an dangerous unary operator: x = (x = + 1) (tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#9)
  
        ''',
        'elements': list([
          dict({
            'name': 'f',
            'source_mapping': dict({
              'ending_column': 4,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
              'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
              'is_dependency': False,
              'length': 142,
              'lines': list([
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
              ]),
              'start': 60,
              'starting_column': 3,
            }),
            'type': 'function',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'C',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                  'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                  'is_dependency': False,
                  'length': 204,
                  'lines': list([
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                  ]),
                  'start': 0,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
              'signature': 'f()',
            }),
          }),
          dict({
            'name': 'x = (x = + 1)',
            'source_mapping': dict({
              'ending_column': 15,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
              'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
              'is_dependency': False,
              'length': 10,
              'lines': list([
                9,
              ]),
              'start': 136,
              'starting_column': 5,
            }),
            'type': 'node',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'f',
                'source_mapping': dict({
                  'ending_column': 4,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                  'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                  'is_dependency': False,
                  'length': 142,
                  'lines': list([
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                  ]),
                  'start': 60,
                  'starting_column': 3,
                }),
                'type': 'function',
                'type_specific_fields': dict({
                  'parent': dict({
                    'name': 'C',
                    'source_mapping': dict({
                      'ending_column': 2,
                      'filename_absolute': '/GENERIC_PATH',
                      'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                      'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                      'is_dependency': False,
                      'length': 204,
                      'lines': list([
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                      ]),
                      'start': 0,
                      'starting_column': 1,
                    }),
                    'type': 'contract',
                  }),
                  'signature': 'f()',
                }),
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#L6-L14',
        'id': '67f0d53f0f21e8f7ef05bc38503626b2382c6bd6863d70c857c2c6ad58ea0c96',
        'impact': 'Low',
        'markdown': '''
          [C.f()](tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#L6-L14) uses an dangerous unary operator: [x = (x = + 1)](tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#L9)
  
        ''',
      }),
      dict({
        'check': 'incorrect-unary',
        'confidence': 'Medium',
        'description': '''
          C.slitherConstructorVariables() (tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#1-15) uses an dangerous unary operator: c = (b = + 1) (tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#4)
  
        ''',
        'elements': list([
          dict({
            'name': 'slitherConstructorVariables',
            'source_mapping': dict({
              'ending_column': 2,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
              'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
              'is_dependency': False,
              'length': 204,
              'lines': list([
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
              ]),
              'start': 0,
              'starting_column': 1,
            }),
            'type': 'function',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'C',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                  'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                  'is_dependency': False,
                  'length': 204,
                  'lines': list([
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                  ]),
                  'start': 0,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
              'signature': 'slitherConstructorVariables()',
            }),
          }),
          dict({
            'name': 'c = (b = + 1)',
            'source_mapping': dict({
              'ending_column': 16,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
              'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
              'is_dependency': False,
              'length': 13,
              'lines': list([
                4,
              ]),
              'start': 42,
              'starting_column': 3,
            }),
            'type': 'node',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'slitherConstructorVariables',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                  'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                  'is_dependency': False,
                  'length': 204,
                  'lines': list([
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                  ]),
                  'start': 0,
                  'starting_column': 1,
                }),
                'type': 'function',
                'type_specific_fields': dict({
                  'parent': dict({
                    'name': 'C',
                    'source_mapping': dict({
                      'ending_column': 2,
                      'filename_absolute': '/GENERIC_PATH',
                      'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                      'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                      'is_dependency': False,
                      'length': 204,
                      'lines': list([
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                      ]),
                      'start': 0,
                      'starting_column': 1,
                    }),
                    'type': 'contract',
                  }),
                  'signature': 'slitherConstructorVariables()',
                }),
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#L1-L15',
        'id': '985ddf90b5ace46a66272275a4c46e1a8964ba0adbb8223a6c19506145ed2f8c',
        'impact': 'Low',
        'markdown': '''
          [C.slitherConstructorVariables()](tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#L1-L15) uses an dangerous unary operator: [c = (b = + 1)](tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#L4)
  
        ''',
      }),
      dict({
        'check': 'incorrect-unary',
        'confidence': 'Medium',
        'description': '''
          C.c (tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#4) uses an dangerous unary operator: (b = + 1)
  
        ''',
        'elements': list([
          dict({
            'name': 'c',
            'source_mapping': dict({
              'ending_column': 16,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
              'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
              'is_dependency': False,
              'length': 13,
              'lines': list([
                4,
              ]),
              'start': 42,
              'starting_column': 3,
            }),
            'type': 'variable',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'C',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                  'filename_short': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol',
                  'is_dependency': False,
                  'length': 204,
                  'lines': list([
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                  ]),
                  'start': 0,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#L4',
        'id': '98d05a4acbe13ff0e6fa795af35dc2002541cc7607f3f4d7ffb356f9d33681bd',
        'impact': 'Low',
        'markdown': '''
          [C.c](tests/detectors/incorrect-unary/0.4.25/invalid_unary_expression.sol#L4) uses an dangerous unary operator: (b = + 1)
  
        ''',
      }),
    ]),
  ])
# ---
