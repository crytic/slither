# serializer version: 1
# name: test_detector[VoidConstructor-0.5.16-void-cst.sol]
  list([
    list([
      dict({
        'check': 'void-cst',
        'confidence': 'High',
        'description': '''
          Void constructor called in D.constructor() (tests/detectors/void-cst/0.5.16/void-cst.sol#10-12):
          	- C() (tests/detectors/void-cst/0.5.16/void-cst.sol#10)
  
        ''',
        'elements': list([
          dict({
            'name': 'constructor',
            'source_mapping': dict({
              'ending_column': 6,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/void-cst/0.5.16/void-cst.sol',
              'filename_short': 'tests/detectors/void-cst/0.5.16/void-cst.sol',
              'is_dependency': False,
              'length': 32,
              'lines': list([
                10,
                11,
                12,
              ]),
              'start': 41,
              'starting_column': 5,
            }),
            'type': 'function',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'D',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/void-cst/0.5.16/void-cst.sol',
                  'filename_short': 'tests/detectors/void-cst/0.5.16/void-cst.sol',
                  'is_dependency': False,
                  'length': 57,
                  'lines': list([
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                  ]),
                  'start': 19,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
              'signature': 'constructor()',
            }),
          }),
          dict({
            'name': 'C()',
            'source_mapping': dict({
              'ending_column': 29,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/void-cst/0.5.16/void-cst.sol',
              'filename_short': 'tests/detectors/void-cst/0.5.16/void-cst.sol',
              'is_dependency': False,
              'length': 3,
              'lines': list([
                10,
              ]),
              'start': 62,
              'starting_column': 26,
            }),
            'type': 'node',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'constructor',
                'source_mapping': dict({
                  'ending_column': 6,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/void-cst/0.5.16/void-cst.sol',
                  'filename_short': 'tests/detectors/void-cst/0.5.16/void-cst.sol',
                  'is_dependency': False,
                  'length': 32,
                  'lines': list([
                    10,
                    11,
                    12,
                  ]),
                  'start': 41,
                  'starting_column': 5,
                }),
                'type': 'function',
                'type_specific_fields': dict({
                  'parent': dict({
                    'name': 'D',
                    'source_mapping': dict({
                      'ending_column': 2,
                      'filename_absolute': '/GENERIC_PATH',
                      'filename_relative': 'tests/detectors/void-cst/0.5.16/void-cst.sol',
                      'filename_short': 'tests/detectors/void-cst/0.5.16/void-cst.sol',
                      'is_dependency': False,
                      'length': 57,
                      'lines': list([
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                      ]),
                      'start': 19,
                      'starting_column': 1,
                    }),
                    'type': 'contract',
                  }),
                  'signature': 'constructor()',
                }),
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/void-cst/0.5.16/void-cst.sol#L10-L12',
        'id': '205eb5189a286fb251c8bfdf19fdd45acfab353670b5af81be434e43fbf1259f',
        'impact': 'Low',
        'markdown': '''
          Void constructor called in [D.constructor()](tests/detectors/void-cst/0.5.16/void-cst.sol#L10-L12):
          	- [C()](tests/detectors/void-cst/0.5.16/void-cst.sol#L10)
  
        ''',
      }),
    ]),
  ])
# ---
