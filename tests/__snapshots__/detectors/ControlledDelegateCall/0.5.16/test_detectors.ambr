# serializer version: 1
# name: test_detector[ControlledDelegateCall-0.5.16-controlled_delegatecall.sol]
  list([
    list([
      dict({
        'check': 'controlled-delegatecall',
        'confidence': 'Medium',
        'description': '''
          C.bad_delegate_call(bytes) (tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol#8-11) uses delegatecall to a input-controlled function id
          	- addr_bad.delegatecall(data) (tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol#10)
  
        ''',
        'elements': list([
          dict({
            'name': 'bad_delegate_call',
            'source_mapping': dict({
              'ending_column': 6,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
              'filename_short': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
              'is_dependency': False,
              'length': 134,
              'lines': list([
                8,
                9,
                10,
                11,
              ]),
              'start': 101,
              'starting_column': 5,
            }),
            'type': 'function',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'C',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
                  'filename_short': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
                  'is_dependency': False,
                  'length': 585,
                  'lines': list([
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                  ]),
                  'start': 0,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
              'signature': 'bad_delegate_call(bytes)',
            }),
          }),
          dict({
            'name': 'addr_bad.delegatecall(data)',
            'source_mapping': dict({
              'ending_column': 36,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
              'filename_short': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
              'is_dependency': False,
              'length': 27,
              'lines': list([
                10,
              ]),
              'start': 201,
              'starting_column': 9,
            }),
            'type': 'node',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'bad_delegate_call',
                'source_mapping': dict({
                  'ending_column': 6,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
                  'filename_short': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
                  'is_dependency': False,
                  'length': 134,
                  'lines': list([
                    8,
                    9,
                    10,
                    11,
                  ]),
                  'start': 101,
                  'starting_column': 5,
                }),
                'type': 'function',
                'type_specific_fields': dict({
                  'parent': dict({
                    'name': 'C',
                    'source_mapping': dict({
                      'ending_column': 2,
                      'filename_absolute': '/GENERIC_PATH',
                      'filename_relative': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
                      'filename_short': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
                      'is_dependency': False,
                      'length': 585,
                      'lines': list([
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                      ]),
                      'start': 0,
                      'starting_column': 1,
                    }),
                    'type': 'contract',
                  }),
                  'signature': 'bad_delegate_call(bytes)',
                }),
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol#L8-L11',
        'id': '5ffc12fd6e122f0e70986a5d7f8d14c087f538145910100ea15192a63391a2b7',
        'impact': 'High',
        'markdown': '''
          [C.bad_delegate_call(bytes)](tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol#L8-L11) uses delegatecall to a input-controlled function id
          	- [addr_bad.delegatecall(data)](tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol#L10)
  
        ''',
      }),
      dict({
        'check': 'controlled-delegatecall',
        'confidence': 'Medium',
        'description': '''
          C.bad_delegate_call2(bytes) (tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol#18-20) uses delegatecall to a input-controlled function id
          	- addr_bad.delegatecall(abi.encode(func_id,data)) (tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol#19)
  
        ''',
        'elements': list([
          dict({
            'name': 'bad_delegate_call2',
            'source_mapping': dict({
              'ending_column': 6,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
              'filename_short': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
              'is_dependency': False,
              'length': 118,
              'lines': list([
                18,
                19,
                20,
              ]),
              'start': 337,
              'starting_column': 5,
            }),
            'type': 'function',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'C',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
                  'filename_short': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
                  'is_dependency': False,
                  'length': 585,
                  'lines': list([
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                  ]),
                  'start': 0,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
              'signature': 'bad_delegate_call2(bytes)',
            }),
          }),
          dict({
            'name': 'addr_bad.delegatecall(abi.encode(func_id,data))',
            'source_mapping': dict({
              'ending_column': 57,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
              'filename_short': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
              'is_dependency': False,
              'length': 48,
              'lines': list([
                19,
              ]),
              'start': 400,
              'starting_column': 9,
            }),
            'type': 'node',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'bad_delegate_call2',
                'source_mapping': dict({
                  'ending_column': 6,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
                  'filename_short': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
                  'is_dependency': False,
                  'length': 118,
                  'lines': list([
                    18,
                    19,
                    20,
                  ]),
                  'start': 337,
                  'starting_column': 5,
                }),
                'type': 'function',
                'type_specific_fields': dict({
                  'parent': dict({
                    'name': 'C',
                    'source_mapping': dict({
                      'ending_column': 2,
                      'filename_absolute': '/GENERIC_PATH',
                      'filename_relative': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
                      'filename_short': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol',
                      'is_dependency': False,
                      'length': 585,
                      'lines': list([
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                      ]),
                      'start': 0,
                      'starting_column': 1,
                    }),
                    'type': 'contract',
                  }),
                  'signature': 'bad_delegate_call2(bytes)',
                }),
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol#L18-L20',
        'id': 'a8749733eb415695ac990f9045813c8c1aadfb54f6de912cff1927db64a6d8d6',
        'impact': 'High',
        'markdown': '''
          [C.bad_delegate_call2(bytes)](tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol#L18-L20) uses delegatecall to a input-controlled function id
          	- [addr_bad.delegatecall(abi.encode(func_id,data))](tests/detectors/controlled-delegatecall/0.5.16/controlled_delegatecall.sol#L19)
  
        ''',
      }),
    ]),
  ])
# ---
