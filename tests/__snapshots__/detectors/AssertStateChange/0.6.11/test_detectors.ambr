# serializer version: 1
# name: test_detector[AssertStateChange-0.6.11-assert_state_change.sol]
  list([
    list([
      dict({
        'check': 'assert-state-change',
        'confidence': 'High',
        'description': '''
          A.bad0() (tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#6-8) has an assert() call which possibly changes state.
          	-assert(bool)((s_a += 1) > 10) (tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#7)
          Consider using require() or change the invariant to not modify the state.
  
        ''',
        'elements': list([
          dict({
            'name': 'bad0',
            'source_mapping': dict({
              'ending_column': 4,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
              'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
              'is_dependency': False,
              'length': 57,
              'lines': list([
                6,
                7,
                8,
              ]),
              'start': 77,
              'starting_column': 3,
            }),
            'type': 'function',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'A',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                  'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                  'is_dependency': False,
                  'length': 759,
                  'lines': list([
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                  ]),
                  'start': 0,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
              'signature': 'bad0()',
            }),
          }),
          dict({
            'name': 'assert(bool)((s_a += 1) > 10)',
            'source_mapping': dict({
              'ending_column': 28,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
              'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
              'is_dependency': False,
              'length': 23,
              'lines': list([
                7,
              ]),
              'start': 106,
              'starting_column': 5,
            }),
            'type': 'node',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'bad0',
                'source_mapping': dict({
                  'ending_column': 4,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                  'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                  'is_dependency': False,
                  'length': 57,
                  'lines': list([
                    6,
                    7,
                    8,
                  ]),
                  'start': 77,
                  'starting_column': 3,
                }),
                'type': 'function',
                'type_specific_fields': dict({
                  'parent': dict({
                    'name': 'A',
                    'source_mapping': dict({
                      'ending_column': 2,
                      'filename_absolute': '/GENERIC_PATH',
                      'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                      'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                      'is_dependency': False,
                      'length': 759,
                      'lines': list([
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                      ]),
                      'start': 0,
                      'starting_column': 1,
                    }),
                    'type': 'contract',
                  }),
                  'signature': 'bad0()',
                }),
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#L6-L8',
        'id': '5b8574d24925d841b9f041ba70166cc219ea6bcdd06c27d2f570740722b38380',
        'impact': 'Informational',
        'markdown': '''
          [A.bad0()](tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#L6-L8) has an assert() call which possibly changes state.
          	-[assert(bool)((s_a += 1) > 10)](tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#L7)
          Consider using require() or change the invariant to not modify the state.
  
        ''',
      }),
      dict({
        'check': 'assert-state-change',
        'confidence': 'High',
        'description': '''
          A.bad2() (tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#19-21) has an assert() call which possibly changes state.
          	-assert(bool)(bad2_callee()) (tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#20)
          Consider using require() or change the invariant to not modify the state.
  
        ''',
        'elements': list([
          dict({
            'name': 'bad2',
            'source_mapping': dict({
              'ending_column': 4,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
              'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
              'is_dependency': False,
              'length': 55,
              'lines': list([
                19,
                20,
                21,
              ]),
              'start': 398,
              'starting_column': 3,
            }),
            'type': 'function',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'A',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                  'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                  'is_dependency': False,
                  'length': 759,
                  'lines': list([
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                  ]),
                  'start': 0,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
              'signature': 'bad2()',
            }),
          }),
          dict({
            'name': 'assert(bool)(bad2_callee())',
            'source_mapping': dict({
              'ending_column': 26,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
              'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
              'is_dependency': False,
              'length': 21,
              'lines': list([
                20,
              ]),
              'start': 427,
              'starting_column': 5,
            }),
            'type': 'node',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'bad2',
                'source_mapping': dict({
                  'ending_column': 4,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                  'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                  'is_dependency': False,
                  'length': 55,
                  'lines': list([
                    19,
                    20,
                    21,
                  ]),
                  'start': 398,
                  'starting_column': 3,
                }),
                'type': 'function',
                'type_specific_fields': dict({
                  'parent': dict({
                    'name': 'A',
                    'source_mapping': dict({
                      'ending_column': 2,
                      'filename_absolute': '/GENERIC_PATH',
                      'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                      'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                      'is_dependency': False,
                      'length': 759,
                      'lines': list([
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                      ]),
                      'start': 0,
                      'starting_column': 1,
                    }),
                    'type': 'contract',
                  }),
                  'signature': 'bad2()',
                }),
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#L19-L21',
        'id': '6f4b2360043bf3035cc152b583d3462d8cc98e91de8577091fe3a0af569d5285',
        'impact': 'Informational',
        'markdown': '''
          [A.bad2()](tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#L19-L21) has an assert() call which possibly changes state.
          	-[assert(bool)(bad2_callee())](tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#L20)
          Consider using require() or change the invariant to not modify the state.
  
        ''',
      }),
      dict({
        'check': 'assert-state-change',
        'confidence': 'High',
        'description': '''
          A.bad1(uint256) (tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#11-13) has an assert() call which possibly changes state.
          	-assert(bool)((s_a += a) > 10) (tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#12)
          Consider using require() or change the invariant to not modify the state.
  
        ''',
        'elements': list([
          dict({
            'name': 'bad1',
            'source_mapping': dict({
              'ending_column': 4,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
              'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
              'is_dependency': False,
              'length': 66,
              'lines': list([
                11,
                12,
                13,
              ]),
              'start': 186,
              'starting_column': 3,
            }),
            'type': 'function',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'A',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                  'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                  'is_dependency': False,
                  'length': 759,
                  'lines': list([
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                  ]),
                  'start': 0,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
              'signature': 'bad1(uint256)',
            }),
          }),
          dict({
            'name': 'assert(bool)((s_a += a) > 10)',
            'source_mapping': dict({
              'ending_column': 28,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
              'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
              'is_dependency': False,
              'length': 23,
              'lines': list([
                12,
              ]),
              'start': 224,
              'starting_column': 5,
            }),
            'type': 'node',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'bad1',
                'source_mapping': dict({
                  'ending_column': 4,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                  'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                  'is_dependency': False,
                  'length': 66,
                  'lines': list([
                    11,
                    12,
                    13,
                  ]),
                  'start': 186,
                  'starting_column': 3,
                }),
                'type': 'function',
                'type_specific_fields': dict({
                  'parent': dict({
                    'name': 'A',
                    'source_mapping': dict({
                      'ending_column': 2,
                      'filename_absolute': '/GENERIC_PATH',
                      'filename_relative': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                      'filename_short': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol',
                      'is_dependency': False,
                      'length': 759,
                      'lines': list([
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                      ]),
                      'start': 0,
                      'starting_column': 1,
                    }),
                    'type': 'contract',
                  }),
                  'signature': 'bad1(uint256)',
                }),
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#L11-L13',
        'id': 'c27ede68d9d7c6159032f3aef6bf9fa491390317da33307fa783a93c1b675bd7',
        'impact': 'Informational',
        'markdown': '''
          [A.bad1(uint256)](tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#L11-L13) has an assert() call which possibly changes state.
          	-[assert(bool)((s_a += a) > 10)](tests/detectors/assert-state-change/0.6.11/assert_state_change.sol#L12)
          Consider using require() or change the invariant to not modify the state.
  
        ''',
      }),
    ]),
  ])
# ---
