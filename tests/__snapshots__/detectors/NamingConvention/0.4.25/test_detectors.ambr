# serializer version: 1
# name: test_detector[NamingConvention-0.4.25-naming_convention.sol]
  list([
    list([
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Struct naming.test (tests/detectors/naming-convention/0.4.25/naming_convention.sol#14-16) is not in CapWords
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'CapWords',
              'target': 'structure',
            }),
            'name': 'test',
            'source_mapping': dict({
              'ending_column': 6,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 35,
              'lines': list([
                14,
                15,
                16,
              ]),
              'start': 229,
              'starting_column': 5,
            }),
            'type': 'struct',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'naming',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 642,
                  'lines': list([
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                  ]),
                  'start': 28,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L14-L16',
        'id': '0ef3ea412cb30b1f0df5fa2af4a7a06e2bf0373fae0770fd9e301aed12c209cf',
        'impact': 'Informational',
        'markdown': '''
          Struct [naming.test](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L14-L16) is not in CapWords
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Variable T.I (tests/detectors/naming-convention/0.4.25/naming_convention.sol#69) is not in mixedCase
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'mixedCase',
              'target': 'variable',
            }),
            'name': 'I',
            'source_mapping': dict({
              'ending_column': 15,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 10,
              'lines': list([
                69,
              ]),
              'start': 932,
              'starting_column': 5,
            }),
            'type': 'variable',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'T',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 253,
                  'lines': list([
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                  ]),
                  'start': 692,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L69',
        'id': '12df12bbda2059673d356e5c32ec4e8a037a3821c9fa42b831a9144437cb79f9',
        'impact': 'Informational',
        'markdown': '''
          Variable [T.I](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L69) is not in mixedCase
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Variable T.I (tests/detectors/naming-convention/0.4.25/naming_convention.sol#69) is single letter l, O, or I, which should not be used
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'l_O_I_should_not_be_used',
              'target': 'variable',
            }),
            'name': 'I',
            'source_mapping': dict({
              'ending_column': 15,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 10,
              'lines': list([
                69,
              ]),
              'start': 932,
              'starting_column': 5,
            }),
            'type': 'variable',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'T',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 253,
                  'lines': list([
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                  ]),
                  'start': 692,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L69',
        'id': '2ac65aa5bb560436d64f16e164aaab90dbbf38d683bfdfdfb42eeb225fc51759',
        'impact': 'Informational',
        'markdown': '''
          Variable [T.I](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L69) is single letter l, O, or I, which should not be used
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Variable T.O (tests/detectors/naming-convention/0.4.25/naming_convention.sol#68) is not in mixedCase
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'mixedCase',
              'target': 'variable',
            }),
            'name': 'O',
            'source_mapping': dict({
              'ending_column': 15,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 10,
              'lines': list([
                68,
              ]),
              'start': 916,
              'starting_column': 5,
            }),
            'type': 'variable',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'T',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 253,
                  'lines': list([
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                  ]),
                  'start': 692,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L68',
        'id': '2de986dda91f7c7e3a51470aa43abfa2c6fd363b742d1bbd38d5287ae179b83a',
        'impact': 'Informational',
        'markdown': '''
          Variable [T.O](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L68) is not in mixedCase
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Variable naming.Var_One (tests/detectors/naming-convention/0.4.25/naming_convention.sol#11) is not in mixedCase
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'mixedCase',
              'target': 'variable',
            }),
            'name': 'Var_One',
            'source_mapping': dict({
              'ending_column': 21,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 16,
              'lines': list([
                11,
              ]),
              'start': 185,
              'starting_column': 5,
            }),
            'type': 'variable',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'naming',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 642,
                  'lines': list([
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                  ]),
                  'start': 28,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L11',
        'id': '34b7c817201b3f3086fc3541f140898d9e9aabe999b1c0a6ef8639ec04351f26',
        'impact': 'Informational',
        'markdown': '''
          Variable [naming.Var_One](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L11) is not in mixedCase
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Constant naming.MY_other_CONSTANT (tests/detectors/naming-convention/0.4.25/naming_convention.sol#9) is not in UPPER_CASE_WITH_UNDERSCORES
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'UPPER_CASE_WITH_UNDERSCORES',
              'target': 'variable_constant',
            }),
            'name': 'MY_other_CONSTANT',
            'source_mapping': dict({
              'ending_column': 40,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 35,
              'lines': list([
                9,
              ]),
              'start': 143,
              'starting_column': 5,
            }),
            'type': 'variable',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'naming',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 642,
                  'lines': list([
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                  ]),
                  'start': 28,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L9',
        'id': '596c2e8064f8f2df55cd5c878eb59c0a74ac7f20719c420d8af307f2431a1a90',
        'impact': 'Informational',
        'markdown': '''
          Constant [naming.MY_other_CONSTANT](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L9) is not in UPPER_CASE_WITH_UNDERSCORES
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Contract naming (tests/detectors/naming-convention/0.4.25/naming_convention.sol#3-48) is not in CapWords
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'CapWords',
              'target': 'contract',
            }),
            'name': 'naming',
            'source_mapping': dict({
              'ending_column': 2,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 642,
              'lines': list([
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
              ]),
              'start': 28,
              'starting_column': 1,
            }),
            'type': 'contract',
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L3-L48',
        'id': '7247d550fb327e3aeb21c82714137e5b45a7e9eeaa6a1bc878102c8081033f85',
        'impact': 'Informational',
        'markdown': '''
          Contract [naming](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L3-L48) is not in CapWords
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Enum naming.numbers (tests/detectors/naming-convention/0.4.25/naming_convention.sol#6) is not in CapWords
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'CapWords',
              'target': 'enum',
            }),
            'name': 'numbers',
            'source_mapping': dict({
              'ending_column': 28,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 23,
              'lines': list([
                6,
              ]),
              'start': 79,
              'starting_column': 5,
            }),
            'type': 'enum',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'naming',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 642,
                  'lines': list([
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                  ]),
                  'start': 28,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L6',
        'id': '7c87b076ea2865060182cf11d155caadb1dcea415ccce0ca8563a74a01611fc2',
        'impact': 'Informational',
        'markdown': '''
          Enum [naming.numbers](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L6) is not in CapWords
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Parameter T.test(uint256,uint256)._used (tests/detectors/naming-convention/0.4.25/naming_convention.sol#59) is not in mixedCase
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'mixedCase',
              'target': 'parameter',
            }),
            'name': '_used',
            'source_mapping': dict({
              'ending_column': 43,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 10,
              'lines': list([
                59,
              ]),
              'start': 794,
              'starting_column': 33,
            }),
            'type': 'variable',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'test',
                'source_mapping': dict({
                  'ending_column': 23,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 84,
                  'lines': list([
                    59,
                    60,
                  ]),
                  'start': 766,
                  'starting_column': 5,
                }),
                'type': 'function',
                'type_specific_fields': dict({
                  'parent': dict({
                    'name': 'T',
                    'source_mapping': dict({
                      'ending_column': 2,
                      'filename_absolute': '/GENERIC_PATH',
                      'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                      'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                      'is_dependency': False,
                      'length': 253,
                      'lines': list([
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                      ]),
                      'start': 692,
                      'starting_column': 1,
                    }),
                    'type': 'contract',
                  }),
                  'signature': 'test(uint256,uint256)',
                }),
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L59',
        'id': '818962ad9f50f13eb87b5c7deade22666431945fb60055f572b38246cfbf311e',
        'impact': 'Informational',
        'markdown': '''
          Parameter [T.test(uint256,uint256)._used](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L59) is not in mixedCase
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Variable T._myPublicVar (tests/detectors/naming-convention/0.4.25/naming_convention.sol#56) is not in mixedCase
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'mixedCase',
              'target': 'variable',
            }),
            'name': '_myPublicVar',
            'source_mapping': dict({
              'ending_column': 22,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 17,
              'lines': list([
                56,
              ]),
              'start': 741,
              'starting_column': 5,
            }),
            'type': 'variable',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'T',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 253,
                  'lines': list([
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                  ]),
                  'start': 692,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L56',
        'id': '8acd53815786acad5b92b51366daf79182a67ab438daa41a6e1ec8a9601fa9a3',
        'impact': 'Informational',
        'markdown': '''
          Variable [T._myPublicVar](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L56) is not in mixedCase
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Event namingevent_(uint256) (tests/detectors/naming-convention/0.4.25/naming_convention.sol#23) is not in CapWords
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'CapWords',
              'target': 'event',
            }),
            'name': 'event_',
            'source_mapping': dict({
              'ending_column': 24,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 19,
              'lines': list([
                23,
              ]),
              'start': 335,
              'starting_column': 5,
            }),
            'type': 'event',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'naming',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 642,
                  'lines': list([
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                  ]),
                  'start': 28,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
              'signature': 'event_(uint256)',
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L23',
        'id': '978ecf4a2c8b96d947e60f6601cf60d0e25e07ebe80ebbc37a7e7f279afd1405',
        'impact': 'Informational',
        'markdown': '''
          Event [namingevent_(uint256)](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L23) is not in CapWords
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Variable T.O (tests/detectors/naming-convention/0.4.25/naming_convention.sol#68) is single letter l, O, or I, which should not be used
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'l_O_I_should_not_be_used',
              'target': 'variable',
            }),
            'name': 'O',
            'source_mapping': dict({
              'ending_column': 15,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 10,
              'lines': list([
                68,
              ]),
              'start': 916,
              'starting_column': 5,
            }),
            'type': 'variable',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'T',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 253,
                  'lines': list([
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                  ]),
                  'start': 692,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L68',
        'id': 'b341001642225c62eae76fef9879c80003b3134b3bc627d9b1912ebcd190304b',
        'impact': 'Informational',
        'markdown': '''
          Variable [T.O](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L68) is single letter l, O, or I, which should not be used
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Modifier naming.CantDo() (tests/detectors/naming-convention/0.4.25/naming_convention.sol#41-43) is not in mixedCase
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'mixedCase',
              'target': 'modifier',
            }),
            'name': 'CantDo',
            'source_mapping': dict({
              'ending_column': 6,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 36,
              'lines': list([
                41,
                42,
                43,
              ]),
              'start': 591,
              'starting_column': 5,
            }),
            'type': 'function',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'naming',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 642,
                  'lines': list([
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                  ]),
                  'start': 28,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
              'signature': 'CantDo()',
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L41-L43',
        'id': 'b8a754a01bd47127f00032cdedd0ade3e27e6543631d8f5bc9e44365ab732895',
        'impact': 'Informational',
        'markdown': '''
          Modifier [naming.CantDo()](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L41-L43) is not in mixedCase
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Function naming.GetOne() (tests/detectors/naming-convention/0.4.25/naming_convention.sol#30-33) is not in mixedCase
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'mixedCase',
              'target': 'function',
            }),
            'name': 'GetOne',
            'source_mapping': dict({
              'ending_column': 6,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 75,
              'lines': list([
                30,
                31,
                32,
                33,
              ]),
              'start': 440,
              'starting_column': 5,
            }),
            'type': 'function',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'naming',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 642,
                  'lines': list([
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                  ]),
                  'start': 28,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
              'signature': 'GetOne()',
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L30-L33',
        'id': 'bf6f97d6a82b84284efdade52d01bd6112007426e2e88d1568190d63c5c4a049',
        'impact': 'Informational',
        'markdown': '''
          Function [naming.GetOne()](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L30-L33) is not in mixedCase
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Variable T.l (tests/detectors/naming-convention/0.4.25/naming_convention.sol#67) is single letter l, O, or I, which should not be used
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'l_O_I_should_not_be_used',
              'target': 'variable',
            }),
            'name': 'l',
            'source_mapping': dict({
              'ending_column': 15,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 10,
              'lines': list([
                67,
              ]),
              'start': 900,
              'starting_column': 5,
            }),
            'type': 'variable',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'T',
                'source_mapping': dict({
                  'ending_column': 2,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 253,
                  'lines': list([
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                  ]),
                  'start': 692,
                  'starting_column': 1,
                }),
                'type': 'contract',
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L67',
        'id': 'cb8668afe6ed1284c935ac95f8f9cb1407f96226fe741e7310d104d5f10a0fc6',
        'impact': 'Informational',
        'markdown': '''
          Variable [T.l](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L67) is single letter l, O, or I, which should not be used
  
        ''',
      }),
      dict({
        'check': 'naming-convention',
        'confidence': 'High',
        'description': '''
          Parameter naming.setInt(uint256,uint256).Number2 (tests/detectors/naming-convention/0.4.25/naming_convention.sol#35) is not in mixedCase
  
        ''',
        'elements': list([
          dict({
            'additional_fields': dict({
              'convention': 'mixedCase',
              'target': 'parameter',
            }),
            'name': 'Number2',
            'source_mapping': dict({
              'ending_column': 47,
              'filename_absolute': '/GENERIC_PATH',
              'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
              'is_dependency': False,
              'length': 12,
              'lines': list([
                35,
              ]),
              'start': 551,
              'starting_column': 35,
            }),
            'type': 'variable',
            'type_specific_fields': dict({
              'parent': dict({
                'name': 'setInt',
                'source_mapping': dict({
                  'ending_column': 6,
                  'filename_absolute': '/GENERIC_PATH',
                  'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                  'is_dependency': False,
                  'length': 63,
                  'lines': list([
                    35,
                    36,
                    37,
                    38,
                  ]),
                  'start': 521,
                  'starting_column': 5,
                }),
                'type': 'function',
                'type_specific_fields': dict({
                  'parent': dict({
                    'name': 'naming',
                    'source_mapping': dict({
                      'ending_column': 2,
                      'filename_absolute': '/GENERIC_PATH',
                      'filename_relative': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                      'filename_short': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol',
                      'is_dependency': False,
                      'length': 642,
                      'lines': list([
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                      ]),
                      'start': 28,
                      'starting_column': 1,
                    }),
                    'type': 'contract',
                  }),
                  'signature': 'setInt(uint256,uint256)',
                }),
              }),
            }),
          }),
        ]),
        'first_markdown_element': 'tests/detectors/naming-convention/0.4.25/naming_convention.sol#L35',
        'id': 'f03bff0b488524254e19ff7d688d34211cd2f29934e22417c9f1fa43fc4a08ad',
        'impact': 'Informational',
        'markdown': '''
          Parameter [naming.setInt(uint256,uint256).Number2](tests/detectors/naming-convention/0.4.25/naming_convention.sol#L35) is not in mixedCase
  
        ''',
      }),
    ]),
  ])
# ---
# name: test_detector[NamingConvention-0.4.25-no_warning_for_public_constants.sol]
  list([
    list([
    ]),
  ])
# ---
